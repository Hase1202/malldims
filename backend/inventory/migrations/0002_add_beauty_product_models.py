# Generated by Django 5.0.2 on 2025-07-27 10:50

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('brand_id', models.AutoField(primary_key=True, serialize=False)),
                ('brand_name', models.CharField(max_length=50)),
                ('street_number', models.CharField(blank=True, max_length=10, null=True)),
                ('street_name', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=50)),
                ('barangay', models.CharField(blank=True, max_length=50, null=True)),
                ('region', models.CharField(blank=True, max_length=50, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=10, null=True)),
                ('tin', models.CharField(blank=True, max_length=15, null=True)),
                ('landline_number', models.CharField(blank=True, max_length=15, null=True)),
                ('contact_person', models.CharField(blank=True, max_length=50, null=True)),
                ('mobile_number', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('vat_classification', models.CharField(choices=[('VAT', 'VAT-inclusive'), ('NON_VAT', 'NON-VAT'), ('BOTH', 'Both VAT and NON-VAT')], default='VAT', max_length=10)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Archived', 'Archived')], default='Active', max_length=10)),
            ],
            options={
                'db_table': 'brand',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customer_id', models.AutoField(primary_key=True, serialize=False)),
                ('company_name', models.CharField(max_length=100)),
                ('contact_person', models.CharField(max_length=50)),
                ('address', models.TextField()),
                ('contact_number', models.CharField(max_length=15)),
                ('tin_id', models.CharField(blank=True, max_length=15, null=True)),
                ('customer_type', models.CharField(choices=[('International', 'International'), ('Distributor', 'Distributor'), ('Physical Store', 'Physical Store'), ('Reseller', 'Reseller'), ('Direct Customer', 'Direct Customer')], max_length=20)),
                ('pricing_tier', models.CharField(choices=[('RD', 'Regional Distributor'), ('PD', 'Provincial Distributor'), ('DD', 'District Distributor'), ('CD', 'City Distributor'), ('RS', 'Reseller'), ('SUB', 'Sub-Reseller'), ('SRP', 'Suggested Retail Price')], default='SRP', max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Archived', 'Archived')], default='Active', max_length=10)),
            ],
            options={
                'db_table': 'customer',
            },
        ),
        migrations.AddField(
            model_name='account',
            name='cost_tier',
            field=models.CharField(choices=[('RD', 'Regional Distributor'), ('PD', 'Provincial Distributor'), ('DD', 'District Distributor'), ('CD', 'City Distributor'), ('RS', 'Reseller'), ('SUB', 'Sub-Reseller')], default='SUB', max_length=3),
        ),
        migrations.AddField(
            model_name='inventorychange',
            name='price_tier',
            field=models.CharField(blank=True, choices=[('RD', 'Regional Distributor'), ('PD', 'Provincial Distributor'), ('DD', 'District Distributor'), ('CD', 'City Distributor'), ('RS', 'Reseller'), ('SUB', 'Sub-Reseller'), ('SRP', 'Suggested Retail Price'), ('SPECIAL', 'Special Price')], max_length=7, null=True),
        ),
        migrations.AddField(
            model_name='inventorychange',
            name='total_price',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=12),
        ),
        migrations.AddField(
            model_name='inventorychange',
            name='unit_price',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
        ),
        migrations.AddField(
            model_name='transaction',
            name='is_receipt_issued',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='transaction',
            name='payment_status',
            field=models.CharField(choices=[('Paid', 'Paid'), ('Unpaid', 'Unpaid')], default='Unpaid', max_length=10),
        ),
        migrations.AddField(
            model_name='transaction',
            name='total_amount',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=12),
        ),
        migrations.AddField(
            model_name='transaction',
            name='vat_amount',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=12),
        ),
        migrations.AddField(
            model_name='transaction',
            name='vat_type',
            field=models.CharField(blank=True, choices=[('VAT', 'VAT'), ('NON_VAT', 'NON-VAT'), ('MIXED', 'Mixed')], max_length=10, null=True),
        ),
        migrations.AlterField(
            model_name='account',
            name='role',
            field=models.CharField(choices=[('Admin', 'Admin'), ('Leader', 'Leader'), ('Sales Rep', 'Sales Rep')], max_length=20),
        ),
        migrations.AlterField(
            model_name='item',
            name='category',
            field=models.CharField(choices=[('Face', 'Face'), ('Body', 'Body'), ('Hair', 'Hair'), ('Makeup', 'Makeup'), ('Fragrance', 'Fragrance'), ('Accessories', 'Accessories'), ('Imported Equipment', 'Imported Equipment'), ('Imported Materials', 'Imported Materials'), ('Local Equipment', 'Local Equipment'), ('Local Materials', 'Local Materials')], max_length=25),
        ),
        migrations.AlterField(
            model_name='item',
            name='item_type',
            field=models.CharField(choices=[('Beauty Product', 'Beauty Product'), ('Merchandise Inventory', 'Merchandise Inventory'), ('Raw Materials', 'Raw Materials'), ('Finished Goods', 'Finished Goods')], max_length=25),
        ),
        migrations.AlterField(
            model_name='item',
            name='supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.supplier'),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.supplier'),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='transaction_type',
            field=models.CharField(choices=[('Purchase', 'Purchase'), ('Sale', 'Sale'), ('Return', 'Return'), ('Receive goods', 'Receive goods'), ('Return goods', 'Return goods'), ('Dispatch goods', 'Dispatch goods'), ('Reserve goods', 'Reserve goods'), ('Manual correction', 'Manual correction')], max_length=20),
        ),
        migrations.AddField(
            model_name='item',
            name='brand',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.brand'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='brand',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.brand'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='customer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.customer'),
        ),
        migrations.CreateModel(
            name='InventoryBatch',
            fields=[
                ('batch_id', models.AutoField(primary_key=True, serialize=False)),
                ('cost_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cost_tier', models.CharField(choices=[('RD', 'Regional Distributor'), ('PD', 'Provincial Distributor'), ('DD', 'District Distributor'), ('CD', 'City Distributor'), ('RS', 'Reseller'), ('SUB', 'Sub-Reseller')], max_length=3)),
                ('quantity_available', models.IntegerField(default=0)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('purchase_order_ref', models.CharField(blank=True, max_length=50, null=True)),
                ('purchase_date', models.DateField()),
                ('discount_applied', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batches', to='inventory.item')),
            ],
            options={
                'db_table': 'inventory_batch',
            },
        ),
        migrations.AddField(
            model_name='inventorychange',
            name='batch',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.inventorybatch'),
        ),
        migrations.CreateModel(
            name='ItemPricing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('regional_distributor', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('provincial_distributor', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('district_distributor', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('city_distributor', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('reseller', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('sub_reseller', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('srp', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pricing', to='inventory.item')),
            ],
            options={
                'db_table': 'item_pricing',
            },
        ),
        migrations.CreateModel(
            name='CustomerSpecialPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('special_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_approved', models.BooleanField(default=False)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='special_prices_created', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.customer')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.item')),
            ],
            options={
                'db_table': 'customer_special_price',
                'unique_together': {('customer', 'item')},
            },
        ),
    ]

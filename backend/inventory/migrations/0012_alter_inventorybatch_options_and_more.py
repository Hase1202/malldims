# Generated by Django 5.0.2 on 2025-07-27 18:44

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0011_alter_brand_options_alter_brand_table'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='inventorybatch',
            options={'ordering': ['expiry_date', 'created_at'], 'verbose_name': 'Inventory Batch', 'verbose_name_plural': 'Inventory Batches'},
        ),
        migrations.AlterModelOptions(
            name='inventorychange',
            options={'ordering': ['-created_at']},
        ),
        migrations.AlterModelOptions(
            name='itempricing',
            options={'verbose_name': 'Item Pricing', 'verbose_name_plural': 'Item Pricing'},
        ),
        migrations.RemoveField(
            model_name='inventorybatch',
            name='discount_applied',
        ),
        migrations.AddField(
            model_name='inventorybatch',
            name='batch_number',
            field=models.CharField(default='BATCH-001', help_text='Unique batch/lot number for tracking', max_length=50),
        ),
        migrations.AddField(
            model_name='inventorybatch',
            name='batch_status',
            field=models.CharField(choices=[('Active', 'Active'), ('Expired', 'Expired'), ('Damaged', 'Damaged'), ('Returned', 'Returned'), ('Sold Out', 'Sold Out')], default='Active', max_length=20),
        ),
        migrations.AddField(
            model_name='inventorybatch',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_batches', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='inventorybatch',
            name='initial_quantity',
            field=models.IntegerField(default=0, help_text='Initial quantity when batch was received'),
        ),
        migrations.AddField(
            model_name='inventorybatch',
            name='manufacturing_date',
            field=models.DateField(blank=True, help_text='Manufacturing date if available', null=True),
        ),
        migrations.AddField(
            model_name='inventorybatch',
            name='notes',
            field=models.TextField(blank=True, help_text='Additional notes about this batch', null=True),
        ),
        migrations.AddField(
            model_name='inventorybatch',
            name='quantity_reserved',
            field=models.IntegerField(default=0, help_text='Quantity reserved for pending orders'),
        ),
        migrations.AddField(
            model_name='inventorybatch',
            name='supplier_invoice_ref',
            field=models.CharField(blank=True, help_text="Supplier's invoice reference", max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='inventorybatch',
            name='tier_discount_amount',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Fixed discount amount from standard tier price', max_digits=10),
        ),
        migrations.AddField(
            model_name='inventorybatch',
            name='tier_discount_percentage',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Discount percentage from standard tier price (e.g., -5 for 5% discount)', max_digits=5),
        ),
        migrations.AddField(
            model_name='inventorybatch',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='inventorychange',
            name='change_type',
            field=models.CharField(choices=[('SALE', 'Sale'), ('PURCHASE', 'Purchase'), ('RETURN_IN', 'Return In'), ('RETURN_OUT', 'Return Out'), ('ADJUSTMENT', 'Adjustment'), ('EXPIRED', 'Expired'), ('DAMAGED', 'Damaged'), ('TRANSFER', 'Transfer')], default='ADJUSTMENT', max_length=20),
        ),
        migrations.AddField(
            model_name='inventorychange',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='inventorychange',
            name='profit_amount',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Profit per unit (unit_price - unit_cost)', max_digits=10),
        ),
        migrations.AddField(
            model_name='inventorychange',
            name='profit_margin_percentage',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Profit margin as percentage', max_digits=5),
        ),
        migrations.AddField(
            model_name='inventorychange',
            name='unit_cost',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Unit cost from the batch this item was sold from', max_digits=10),
        ),
        migrations.AddField(
            model_name='itempricing',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='itempricing',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Whether this pricing is currently active'),
        ),
        migrations.AlterField(
            model_name='account',
            name='cost_tier',
            field=models.CharField(choices=[('RD', 'Regional Distributor'), ('PD', 'Provincial Distributor'), ('DD', 'District Distributor'), ('CD', 'City Distributor'), ('RS', 'Reseller'), ('SUB', 'Sub-Reseller')], default='SUB', help_text='The pricing tier at which this user purchases items', max_length=3),
        ),
        migrations.AlterField(
            model_name='customer',
            name='pricing_tier',
            field=models.CharField(choices=[('RD', 'Regional Distributor'), ('PD', 'Provincial Distributor'), ('DD', 'District Distributor'), ('CD', 'City Distributor'), ('RS', 'Reseller'), ('SUB', 'Sub-Reseller'), ('SRP', 'Suggested Retail Price')], default='SRP', help_text='The pricing tier this customer is eligible for', max_length=3),
        ),
        migrations.AlterField(
            model_name='inventorybatch',
            name='cost_price',
            field=models.DecimalField(decimal_places=2, help_text='Actual cost price paid for this batch', max_digits=10),
        ),
        migrations.AlterField(
            model_name='inventorybatch',
            name='cost_tier',
            field=models.CharField(choices=[('RD', 'Regional Distributor'), ('PD', 'Provincial Distributor'), ('DD', 'District Distributor'), ('CD', 'City Distributor'), ('RS', 'Reseller'), ('SUB', 'Sub-Reseller'), ('SRP', 'Suggested Retail Price')], help_text='The pricing tier this batch was purchased at', max_length=3),
        ),
        migrations.AlterField(
            model_name='inventorybatch',
            name='expiry_date',
            field=models.DateField(blank=True, help_text='Product expiry date for FIFO management', null=True),
        ),
        migrations.AlterField(
            model_name='inventorybatch',
            name='purchase_date',
            field=models.DateField(default='2025-01-01', help_text='Date when this batch was purchased'),
        ),
        migrations.AlterField(
            model_name='inventorybatch',
            name='purchase_order_ref',
            field=models.CharField(blank=True, help_text='Reference to the purchase order', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='inventorybatch',
            name='quantity_available',
            field=models.IntegerField(default=0, help_text='Current available quantity in this batch'),
        ),
        migrations.AlterField(
            model_name='inventorychange',
            name='notes',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='itempricing',
            name='city_distributor',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Fourth tier price - for city distributors', max_digits=10, verbose_name='City Distributor (CD) Price'),
        ),
        migrations.AlterField(
            model_name='itempricing',
            name='district_distributor',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Third tier price - for district distributors', max_digits=10, verbose_name='District Distributor (DD) Price'),
        ),
        migrations.AlterField(
            model_name='itempricing',
            name='provincial_distributor',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Second tier price - for provincial distributors', max_digits=10, verbose_name='Provincial Distributor (PD) Price'),
        ),
        migrations.AlterField(
            model_name='itempricing',
            name='regional_distributor',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Highest tier price - for regional distributors', max_digits=10, verbose_name='Regional Distributor (RD) Price'),
        ),
        migrations.AlterField(
            model_name='itempricing',
            name='reseller',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Fifth tier price - for resellers', max_digits=10, verbose_name='Reseller (RS) Price'),
        ),
        migrations.AlterField(
            model_name='itempricing',
            name='srp',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Lowest tier price - suggested retail price for end customers', max_digits=10, verbose_name='Suggested Retail Price (SRP)'),
        ),
        migrations.AlterField(
            model_name='itempricing',
            name='sub_reseller',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Sixth tier price - for sub-resellers', max_digits=10, verbose_name='Sub-Reseller (Sub-RS) Price'),
        ),
        migrations.CreateModel(
            name='BatchSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_sold', models.IntegerField()),
                ('sale_price_per_unit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cost_price_per_unit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('profit_per_unit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_profit', models.DecimalField(decimal_places=2, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales', to='inventory.inventorybatch')),
                ('inventory_change', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batch_sales', to='inventory.inventorychange')),
            ],
            options={
                'verbose_name': 'Batch Sale',
                'verbose_name_plural': 'Batch Sales',
                'db_table': 'batch_sale',
            },
        ),
    ]

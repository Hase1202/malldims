# Generated by Django 5.0.2 on 2025-07-27 10:20

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('supplier_id', models.AutoField(primary_key=True, serialize=False)),
                ('supplier_name', models.CharField(max_length=50)),
                ('street_number', models.CharField(blank=True, max_length=10, null=True)),
                ('street_name', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=50)),
                ('barangay', models.CharField(blank=True, max_length=50, null=True)),
                ('region', models.CharField(blank=True, max_length=50, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=10, null=True)),
                ('tin', models.CharField(blank=True, max_length=15, null=True)),
                ('landline_number', models.CharField(blank=True, max_length=15, null=True)),
                ('contact_person', models.CharField(blank=True, max_length=50, null=True)),
                ('mobile_number', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Archived', 'Archived')], default='Active', max_length=10)),
            ],
            options={
                'db_table': 'supplier',
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('account_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=30, unique=True)),
                ('role', models.CharField(choices=[('Warehouse Staff', 'Warehouse Staff'), ('Sales', 'Sales'), ('Inventory Manager', 'Inventory Manager')], max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'account',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('item_id', models.AutoField(primary_key=True, serialize=False)),
                ('item_name', models.CharField(max_length=100)),
                ('item_type', models.CharField(choices=[('Merchandise Inventory', 'Merchandise Inventory'), ('Raw Materials', 'Raw Materials'), ('Finished Goods', 'Finished Goods')], max_length=25)),
                ('category', models.CharField(choices=[('Imported Equipment', 'Imported Equipment'), ('Imported Materials', 'Imported Materials'), ('Local Equipment', 'Local Equipment'), ('Local Materials', 'Local Materials')], max_length=25)),
                ('quantity', models.SmallIntegerField(default=0)),
                ('model_number', models.CharField(max_length=50)),
                ('threshold_value', models.SmallIntegerField()),
                ('availability_status', models.CharField(choices=[('In Stock', 'In Stock'), ('Low Stock', 'Low Stock'), ('Out of Stock', 'Out of Stock')], max_length=15)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.supplier')),
            ],
            options={
                'db_table': 'item',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('transaction_id', models.AutoField(primary_key=True, serialize=False)),
                ('transaction_status', models.CharField(choices=[('Pending', 'Pending'), ('Completed', 'Completed'), ('Cancelled', 'Cancelled')], default='Completed', max_length=20)),
                ('transaction_type', models.CharField(choices=[('Receive goods', 'Receive goods'), ('Return goods', 'Return goods'), ('Dispatch goods', 'Dispatch goods'), ('Reserve goods', 'Reserve goods'), ('Manual correction', 'Manual correction')], max_length=20)),
                ('transacted_date', models.DateField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('due_date', models.DateField(null=True)),
                ('priority_status', models.CharField(choices=[('Normal', 'Normal'), ('Urgent', 'Urgent'), ('Critical', 'Critical')], default='Normal', max_length=20)),
                ('reference_number', models.CharField(max_length=20, null=True)),
                ('customer_name', models.CharField(max_length=50, null=True)),
                ('notes', models.TextField(null=True)),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('supplier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.supplier')),
            ],
            options={
                'db_table': 'transaction',
            },
        ),
        migrations.CreateModel(
            name='InventoryChange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_quantity', models.SmallIntegerField(null=True)),
                ('quantity_change', models.SmallIntegerField()),
                ('notes', models.TextField(null=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.item')),
                ('transaction', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.transaction')),
            ],
            options={
                'db_table': 'inventory_change',
            },
        ),
    ]
